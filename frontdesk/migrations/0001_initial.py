# Generated by Django 5.2.4 on 2025-10-06 11:05

import datetime
import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_id', models.CharField(help_text='Unique patient identifier', max_length=20, unique=True)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('date_of_birth', models.DateField()),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], max_length=1)),
                ('blood_group', models.CharField(blank=True, choices=[('A+', 'A+'), ('A-', 'A-'), ('B+', 'B+'), ('B-', 'B-'), ('AB+', 'AB+'), ('AB-', 'AB-'), ('O+', 'O+'), ('O-', 'O-')], max_length=3, null=True)),
                ('phone_number', models.CharField(max_length=17, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'.", regex='^\\+?1?\\d{9,15}$')])),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('address_line1', models.CharField(max_length=255)),
                ('address_line2', models.CharField(blank=True, max_length=255)),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=100)),
                ('pincode', models.CharField(max_length=10)),
                ('emergency_contact_name', models.CharField(blank=True, max_length=200)),
                ('emergency_contact_phone', models.CharField(blank=True, max_length=17, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'.", regex='^\\+?1?\\d{9,15}$')])),
                ('emergency_contact_relation', models.CharField(blank=True, max_length=50)),
                ('allergies', models.TextField(blank=True, help_text='List any known allergies')),
                ('chronic_conditions', models.TextField(blank=True, help_text='List any chronic medical conditions')),
                ('current_medications', models.TextField(blank=True, help_text='List current medications')),
                ('registration_date', models.DateField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('registered_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='registered_patients', to='accounts.frontdeskstaff')),
            ],
            options={
                'verbose_name': 'Patient',
                'verbose_name_plural': 'Patients',
                'db_table': 'patient',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('appointment_id', models.CharField(help_text='Unique appointment identifier', max_length=20, unique=True)),
                ('appointment_date', models.DateField()),
                ('appointment_time', models.TimeField()),
                ('duration', models.IntegerField(default=30, help_text='Appointment duration in minutes')),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('confirmed', 'Confirmed'), ('checked_in', 'Checked In'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('no_show', 'No Show'), ('rescheduled', 'Rescheduled')], default='scheduled', max_length=20)),
                ('appointment_type', models.CharField(choices=[('new', 'New Patient'), ('follow_up', 'Follow Up'), ('routine', 'Routine Checkup'), ('emergency', 'Emergency')], default='routine', max_length=20)),
                ('reason_for_visit', models.TextField()),
                ('symptoms', models.TextField(blank=True)),
                ('special_instructions', models.TextField(blank=True)),
                ('scheduled_at', models.DateTimeField(auto_now_add=True)),
                ('is_confirmed', models.BooleanField(default=False)),
                ('confirmed_at', models.DateTimeField(blank=True, null=True)),
                ('checked_in_at', models.DateTimeField(blank=True, null=True)),
                ('consultation_start_time', models.DateTimeField(blank=True, null=True)),
                ('consultation_end_time', models.DateTimeField(blank=True, null=True)),
                ('cancellation_reason', models.TextField(blank=True)),
                ('cancelled_at', models.DateTimeField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('reminder_sent', models.BooleanField(default=False)),
                ('reminder_sent_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('cancelled_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='appointments_cancelled', to='accounts.frontdeskstaff')),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointments', to='accounts.doctor')),
                ('rescheduled_from', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rescheduled_to', to='frontdesk.appointment')),
                ('scheduled_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='appointments_scheduled', to='accounts.frontdeskstaff')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointments', to='frontdesk.patient')),
            ],
            options={
                'verbose_name': 'Appointment',
                'verbose_name_plural': 'Appointments',
                'db_table': 'appointment',
                'ordering': ['appointment_date', 'appointment_time'],
            },
        ),
        migrations.CreateModel(
            name='Queue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('queue_number', models.CharField(max_length=10, unique=True)),
                ('status', models.CharField(choices=[('waiting', 'Waiting'), ('with_doctor', 'With Doctor'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('no_show', 'No Show')], default='waiting', max_length=20)),
                ('priority', models.CharField(choices=[('normal', 'Normal'), ('urgent', 'Urgent'), ('emergency', 'Emergency')], default='normal', max_length=20)),
                ('arrival_time', models.DateTimeField(auto_now_add=True)),
                ('called_time', models.DateTimeField(blank=True, null=True)),
                ('consultation_start_time', models.DateTimeField(blank=True, null=True)),
                ('consultation_end_time', models.DateTimeField(blank=True, null=True)),
                ('estimated_wait_time', models.IntegerField(default=0, help_text='Estimated wait time in minutes')),
                ('reason_for_visit', models.TextField(blank=True)),
                ('notes', models.TextField(blank=True)),
                ('queue_date', models.DateField(default=datetime.date.today)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('added_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='queue_entries_added', to='accounts.frontdeskstaff')),
                ('doctor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='queue_entries', to='accounts.doctor')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='queue_entries', to='frontdesk.patient')),
            ],
            options={
                'verbose_name': 'Queue Entry',
                'verbose_name_plural': 'Queue Entries',
                'db_table': 'queue',
                'ordering': ['priority', 'arrival_time'],
            },
        ),
        migrations.CreateModel(
            name='DoctorAvailability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('is_available', models.BooleanField(default=True)),
                ('max_appointments', models.IntegerField(default=10, help_text='Maximum appointments for this slot')),
                ('unavailability_reason', models.CharField(blank=True, help_text='e.g., Emergency, Leave, Conference', max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='availability_slots', to='accounts.doctor')),
            ],
            options={
                'verbose_name': 'Doctor Availability',
                'verbose_name_plural': 'Doctor Availabilities',
                'db_table': 'doctor_availability',
                'ordering': ['date', 'start_time'],
                'indexes': [models.Index(fields=['doctor', 'date'], name='doctor_avai_doctor__494759_idx'), models.Index(fields=['date', 'is_available'], name='doctor_avai_date_184d7f_idx')],
                'unique_together': {('doctor', 'date', 'start_time')},
            },
        ),
        migrations.AddIndex(
            model_name='patient',
            index=models.Index(fields=['patient_id'], name='patient_patient_a732e3_idx'),
        ),
        migrations.AddIndex(
            model_name='patient',
            index=models.Index(fields=['phone_number'], name='patient_phone_n_39669a_idx'),
        ),
        migrations.AddIndex(
            model_name='patient',
            index=models.Index(fields=['last_name', 'first_name'], name='patient_last_na_abf268_idx'),
        ),
        migrations.AddIndex(
            model_name='appointment',
            index=models.Index(fields=['appointment_date', 'status'], name='appointment_appoint_c93148_idx'),
        ),
        migrations.AddIndex(
            model_name='appointment',
            index=models.Index(fields=['patient', 'appointment_date'], name='appointment_patient_1dd82b_idx'),
        ),
        migrations.AddIndex(
            model_name='appointment',
            index=models.Index(fields=['doctor', 'appointment_date'], name='appointment_doctor__93c639_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='appointment',
            unique_together={('doctor', 'appointment_date', 'appointment_time')},
        ),
        migrations.AddIndex(
            model_name='queue',
            index=models.Index(fields=['queue_date', 'status'], name='queue_queue_d_c6aa52_idx'),
        ),
        migrations.AddIndex(
            model_name='queue',
            index=models.Index(fields=['doctor', 'status'], name='queue_doctor__aeeee5_idx'),
        ),
    ]
